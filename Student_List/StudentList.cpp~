#include <iostream>
#include <vector>
#include <iomanip>
#include <cmath>

using namespace std;

struct students {
  string firstName;
  string lastName;
  int id;
  double GPA;
};

int index = -1;
int i = 0;

string input = "";
double input2 = 0;

vector<students>sl;

void ADD() {
  input = "";
  input2 = 0;
  
  index++;
  sl.push_back(students());

  cout << endl <<"Please Input the student's first name: ";
  cin >> input;
  sl[index].firstName = input;

  cout << endl << "Please Input the student's last name: ";
  cin >> input;
  sl[index].lastName = input;

  cout << endl << "Please Input the student's id: ";
  cin >> input2;
  sl[index].id = input2;

  cout << endl << "Please Input the student's GPA: ";
  cin >> input2;
  input2 = round(input2 * 100) / 100;
  cout << input2 << endl;
  sl[index].GPA = input2;

  cout << "Added: " << sl[index].firstName << " " << sl[index].lastName << endl << endl;
}

void PRINT() {
  cout << endl;
  if (sl.size() > 0) {
    for (int i = 0; i < sl.size(); i++) {
      cout << sl[i].firstName << ", " << sl[i].lastName << ", " << sl[i].id << ", " << sl[i].GPA << endl;
    }
  } else {
    cout << "No students in database!" << endl;
  }
  cout << endl;
}

void DELETE() {
  int deleteId = 0;
  
  cout << endl << "Please input the id of the Student you want to delete: ";
  cin >> deleteId;
  
  for (i = 0; i < sl.size(); i++) {
    if (deleteId == sl[i].id) {
      break;
    }
  }

  if (deleteId == sl[i].id) {
    cout << endl << "Deleted: " << sl[i].firstName << " " << sl[i].lastName << "." << endl;
    sl.erase(sl.begin() + i);
  } else {
    cout << "Student not found, cannot delete." << endl;
  }
  
  cout << endl;
}

int main() {
  while (true) {
    cin >> input;

    if (input == "ADD" || input == "add") {
      ADD();
    } else if (input == "PRINT" || input == "print") {
      PRINT();
    } else if (input == "DELETE" || input == "delete") {
      DELETE();
    } else if (input == "exit" || input == "quit") {
      exit(0);
    }
  }

  return 0;
}
